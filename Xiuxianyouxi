-- üìú Tu Ti√™n Hack UI Script
-- T√°c gi·∫£: Tu Ti√™n Gi·∫£

print("DEBUG: Script started! Attempting to initialize UI...")

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local ContextActionService = game:GetService("ContextActionService")

local player = Players.LocalPlayer
local gui = player:WaitForChild("PlayerGui")
print("DEBUG: PlayerGui found:", gui)

-- === ƒê·ªäNH NGHƒ®A T·ªåA ƒê·ªò C√ÅC TH·∫æ GI·ªöI ===
-- Tu Ti√™n Gi·ªõi c√°ch Ph√†m Gi·ªõi 10 d·∫∑m (kho·∫£ng 16000 studs) theo tr·ª•c Z
local PHAM_GIOI_POS = Vector3.new(0, 50, 0)
local TU_TIEN_GIOI_POS = Vector3.new(0, 0, 500) -- ƒê√É CH·ªàNH L·∫†I V·ªä TR√ç TU TI√äN GI·ªöI G·∫¶N H∆†N

-- === K√çCH TH∆Ø·ªöC V√Ä M√ÄU S·∫ÆC C·ª¶A N·ªÄN T·∫¢NG TH·∫æ GI·ªöI (PLACEHOLDER) ===
local WORLD_PLATFORM_SIZE_PHAM_GIOI = Vector3.new(200, 5, 200) -- K√≠ch th∆∞·ªõc 200x200 m√©t (studs)
local WORLD_PLATFORM_SIZE_TU_TIEN = Vector3.new(150, 5, 150) -- TƒÉng k√≠ch th∆∞·ªõc l√™n m·ªôt ch√∫t cho v∆∞·ªùn hoa (150x150)

local PHAM_GIOI_COLOR = Color3.fromRGB(100, 150, 100) -- M√†u xanh l√° c√¢y nh·∫°t
local TU_TIEN_GIOI_COLOR = Color3.fromRGB(85, 170, 0) -- M√†u xanh l√° c√¢y ƒë·∫≠m h∆°n cho Tu Ti√™n Gi·ªõi (c·ªè)

-- üß± UI Kh·ªüi t·∫°o ch√≠nh (ScreenGui)
local mainUI = Instance.new("ScreenGui")
mainUI.Name = "TuTienUI"
mainUI.ResetOnSpawn = false
mainUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
mainUI.Parent = gui
print("DEBUG: ScreenGui 'TuTienUI' created and parented to PlayerGui.")

-- === KHUNG MENU CH√çNH CH·ª®A T·∫§T C·∫¢ UI ===
-- K√≠ch th∆∞·ªõc c√°c th√†nh ph·∫ßn con
local thuocTinhFrameWidth = 320
local thuocTinhFrameHeight = 230
local actionButtonWidth = 120
local actionButtonHeight = 40
local worldButtonWidth = 150 -- K√≠ch th∆∞·ªõc cho n√∫t th·∫ø gi·ªõi

local gapBetweenThuocTinhAndButtons = 10 -- Kho·∫£ng c√°ch gi·ªØa Thu·ªôc T√≠nh v√† 3 n√∫t
local gapBetweenButtons = 10 -- Kho·∫£ng c√°ch gi·ªØa c√°c n√∫t h√†nh ƒë·ªông
local gapBetweenMainSections = 20 -- Kho·∫£ng c√°ch gi·ªØa kh·ªëi Thu·ªôc T√≠nh+N√∫t v√† Kh·ªëi N√∫t Th·∫ø Gi·ªõi
local padding = 10 -- Kho·∫£ng ƒë·ªám b√™n trong FullMenuFrame

-- T√≠nh to√°n Y offsets cho c√°c n√∫t h√†nh ƒë·ªông
local tuLuyenYOffset = 0
local dotPhaYOffset = tuLuyenYOffset + actionButtonHeight + gapBetweenButtons
local thanTheYOffset = dotPhaYOffset + actionButtonHeight + gapBetweenButtons -- Th√¢n Th·ªÉ d∆∞·ªõi ƒê·ªôt Ph√°
local tuSiYOffset = thanTheYOffset + actionButtonHeight + gapBetweenButtons -- NEW: Tu Sƒ© d∆∞·ªõi Th√¢n Th·ªÉ

-- T√≠nh to√°n k√≠ch th∆∞·ªõc c·ªßa FullMenuFrame
-- Chi·ªÅu r·ªông: padding tr√°i + chi·ªÅu r·ªông Thu·ªôc T√≠nh + kho·∫£ng c√°ch + chi·ªÅu r·ªông n√∫t H√†nh ƒê·ªông + padding ph·∫£i
local fullMenuFrameTotalWidth = padding + thuocTinhFrameWidth + gapBetweenThuocTinhAndButtons + actionButtonWidth + padding
-- Chi·ªÅu cao: ƒê·∫£m b·∫£o ƒë·ªß cao ƒë·ªÉ ch·ª©a c·∫£ Thu·ªôc T√≠nh Frame v√† c√°c n√∫t h√†nh ƒë·ªông
local fullMenuFrameTotalHeight = math.max(padding + thuocTinhFrameHeight + padding, padding + tuSiYOffset + actionButtonHeight + padding)


local fullMenuFrame = Instance.new("Frame")
fullMenuFrame.Name = "FullMenuFrame"
fullMenuFrame.Position = UDim2.new(0, 20, 0, 20) -- V·ªã tr√≠ ban ƒë·∫ßu c·ªßa menu tr√™n m√†n h√¨nh
fullMenuFrame.Size = UDim2.new(0, fullMenuFrameTotalWidth, 0, fullMenuFrameTotalHeight)
fullMenuFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
fullMenuFrame.BackgroundTransparency = 0.1
fullMenuFrame.BorderSizePixel = 0
fullMenuFrame.Active = true
fullMenuFrame.Draggable = true
fullMenuFrame.Visible = false -- Ban ƒë·∫ßu ·∫©n ƒëi
fullMenuFrame.Parent = mainUI
print("DEBUG: FullMenuFrame created and parented to PlayerGui.")

local fullMenuGlow = Instance.new("UIStroke")
fullMenuGlow.Thickness = 2
fullMenuGlow.Color = Color3.fromRGB(0, 255, 200)
fullMenuGlow.Parent = fullMenuFrame
print("DEBUG: UIStroke created for FullMenuFrame.")

-- === N√öT M·ªû/ƒê√ìNG MENU ===
local toggleMenuButton = Instance.new("TextButton")
toggleMenuButton.Name = "ToggleMenuButton"
toggleMenuButton.Size = UDim2.new(0, 100, 0, 30)
toggleMenuButton.Position = UDim2.new(0, 10, 0, 10) -- V·ªã tr√≠ c·ªë ƒë·ªãnh (g√≥c tr√™n b√™n tr√°i m√†n h√¨nh)
toggleMenuButton.Text = "M·ªü Menu"
toggleMenuButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleMenuButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
toggleMenuButton.BackgroundTransparency = 0
toggleMenuButton.BorderSizePixel = 0
toggleMenuButton.Font = Enum.Font.GothamSemibold
toggleMenuButton.TextSize = 14
toggleMenuButton.Parent = mainUI
print("DEBUG: ToggleMenuButton created.")

toggleMenuButton.MouseButton1Click:Connect(function()
	fullMenuFrame.Visible = not fullMenuFrame.Visible
	toggleMenuButton.Text = fullMenuFrame.Visible and "ƒê√≥ng Menu" or "M·ªü Menu"
	print("DEBUG: Menu visibility toggled: " .. tostring(fullMenuFrame.Visible))
end)

-- *** UI THU·ªòC T√çNH ***
local thuocTinhFrame = Instance.new("Frame")
thuocTinhFrame.Name = "ThuocTinhFrame"
thuocTinhFrame.Position = UDim2.new(0, padding, 0, padding) -- V·ªã tr√≠ b√™n trong fullMenuFrame (c√≥ padding)
thuocTinhFrame.Size = UDim2.new(0, thuocTinhFrameWidth, 0, thuocTinhFrameHeight)
thuocTinhFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
thuocTinhFrame.BackgroundTransparency = 0.2
thuocTinhFrame.BorderSizePixel = 0
thuocTinhFrame.Parent = fullMenuFrame -- Parent l√† fullMenuFrame
print("DEBUG: ThuocTinhFrame created and parented to FullMenuFrame.")

local thuocTinhFrameGlow = Instance.new("UIStroke")
thuocTinhFrameGlow.Thickness = 2
thuocTinhFrameGlow.Color = Color3.fromRGB(0, 255, 200)
thuocTinhFrameGlow.Parent = thuocTinhFrame
print("DEBUG: UIStroke created for ThuocTinhFrame.")

-- üî† Helper function ƒë·ªÉ t·∫°o TextLabel
local function createTextLabel(name, text, posY, parentFrame, sizeXScale, sizeXOffset, posXOffset)
	local parent = parentFrame or thuocTinhFrame -- M·∫∑c ƒë·ªãnh parent l√† thuocTinhFrame
	local label = Instance.new("TextLabel")
	label.Name = name
	label.Size = UDim2.new(sizeXScale or 1, sizeXOffset or -20, 0, 20)
	label.Position = UDim2.new(0, posXOffset or 10, 0, posY)
	label.BackgroundTransparency = 1
	label.Text = text
	label.TextColor3 = Color3.fromRGB(200, 255, 255)
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Font = Enum.Font.GothamSemibold
	label.TextSize = 16
	label.Parent = parent
	print("DEBUG: TextLabel '" .. name .. "' created.")
	return label
end

-- üßæ D√≤ng thu·ªôc t√≠nh (parent m·∫∑c ƒë·ªãnh l√† thuocTinhFrame)
local canhGioiLabel = createTextLabel("CanhGioi", "C·∫£nh Gi·ªõi: Luy·ªán Kh√≠ T·∫ßng 1", 0)
local linhCanLabel = createTextLabel("LinhCan", "Linh CƒÉn: Th·∫ßn Ph·∫©m ", 25)
local theChatLabel = createTextLabel("TheChat", "Th·ªÉ Ch·∫•t: ", 50)
local khiHuyetLabel = createTextLabel("KhiHuyet", "Kh√≠ Huy·∫øt: 100", 75)
local chanNguyenLabel = createTextLabel("ChanNguyen", "Ch√¢n Nguy√™n: 100", 100)
local ageLabel = createTextLabel("Age", "Tu·ªïi: 20", 125)
print("DEBUG: All attribute labels created.")

-- üåÄ Thanh Tu Vi (parent l√† thuocTinhFrame)
local tuViBackground = Instance.new("Frame")
tuViBackground.Name = "TuViBG"
tuViBackground.Size = UDim2.new(1, -20, 0, 15)
tuViBackground.Position = UDim2.new(0, 10, 1, -25) -- C·ªë ƒë·ªãnh ·ªü ƒë√°y frame
tuViBackground.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
tuViBackground.BorderSizePixel = 0
tuViBackground.Parent = thuocTinhFrame
print("DEBUG: TuViBackground frame created.")

local tuViBar = Instance.new("Frame")
tuViBar.Name = "TuViBar"
tuViBar.Size = UDim2.new(0, 0, 1, 0)
tuViBar.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
tuViBar.BorderSizePixel = 0
tuViBar.Parent = tuViBackground
print("DEBUG: TuViBar created.")

local barGlow = Instance.new("UIStroke")
barGlow.Thickness = 1
barGlow.Color = Color3.fromRGB(0, 255, 255)
barGlow.Parent = tuViBar
print("DEBUG: BarGlow created for TuViBar.")

-- === C√ÅC N√öT H√ÄNH ƒê·ªòNG (Tu Luy·ªán, ƒê·ªôt Ph√°, Chuy·ªÉn Th·∫ø, Th√¢n Th·ªÉ, Tu Sƒ©) - ƒê√çNH CH·∫∂T V√ÄO FULL MENU FRAME ===
-- V·ªã tr√≠ b·∫Øt ƒë·∫ßu c·ªßa c√°c n√∫t h√†nh ƒë·ªông (b√™n ph·∫£i c·ªßa ThuocTinhFrame, c√≥ padding)
local actionButtonsStartX = padding + thuocTinhFrameWidth + gapBetweenThuocTinhAndButtons

-- Helper function for creating action frames/buttons inside fullMenuFrame
local function createActionButtonUI(frameName, buttonName, buttonText, yOffset)
	local frame = Instance.new("Frame")
	frame.Name = frameName
	frame.Position = UDim2.new(0, actionButtonsStartX, 0, padding + yOffset) -- V·ªã tr√≠ X c·ªë ƒë·ªãnh, Y thay ƒë·ªïi
	frame.Size = UDim2.new(0, actionButtonWidth, 0, actionButtonHeight)
	frame.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
	frame.BackgroundTransparency = 0.2
	frame.BorderSizePixel = 0
	frame.Parent = fullMenuFrame -- Parent l√† fullMenuFrame

	local frameGlow = Instance.new("UIStroke")
	frameGlow.Thickness = 2
	frameGlow.Color = Color3.fromRGB(0, 255, 200)
	frameGlow.Parent = frame

	local button = Instance.new("TextButton")
	button.Name = buttonName
	button.Size = UDim2.new(1, 0, 1, 0)
	button.Position = UDim2.new(0, 0, 0, 0)
	button.Text = buttonText
	button.TextColor3 = Color3.fromRGB(200, 255, 255)
	button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	button.BackgroundTransparency = 0.5
	button.BorderSizePixel = 0
	button.Font = Enum.Font.GothamSemibold
	button.TextSize = 16
	button.Parent = frame

	return frame, button
end

-- Tu Luy·ªán UI (·ªü tr√™n c√πng, d√≠nh v√†o Thu·ªôc T√≠nh)
local tuLuyenFrame, tuLuyenButton = createActionButtonUI("TuLuyenFrame", "TuLuyenButton", "Tu Luy·ªán (C)", tuLuyenYOffset)

-- ƒê·ªôt Ph√° UI (·ªü gi·ªØa)
local dotPhaFrame, dotPhaButton = createActionButtonUI("DotPhaFrame", "DotPhaButton", "ƒê·ªôt Ph√° (B)", dotPhaYOffset)

-- Chuy·ªÉn Th·∫ø UI (xu·∫•t hi·ªán ·ªü v·ªã tr√≠ c·ªßa ƒê·ªôt Ph√° khi ƒë·ªß ƒëi·ªÅu ki·ªán)
local chuyenTheFrame, chuyenTheButton = createActionButtonUI("ChuyenTheFrame", "ChuyenTheButton", "Chuy·ªÉn Th·∫ø (V)", dotPhaYOffset)
chuyenTheFrame.Visible = false

-- NEW: Th√¢n Th·ªÉ UI (d∆∞·ªõi ƒê·ªôt Ph√°/Chuy·ªÉn Th·∫ø)
local thanTheFrame, thanTheButton = createActionButtonUI("ThanTheFrame", "ThanTheButton", "Th√¢n Th·ªÉ", thanTheYOffset) -- ƒê√£ ƒë·ªïi text

-- NEW: Tu Sƒ© UI (d∆∞·ªõi Th√¢n Th·ªÉ)
local tuSiFrame, tuSiButton = createActionButtonUI("TuSiFrame", "TuSiButton", "Tu Sƒ©", tuSiYOffset) -- ƒê√É S·ª¨A TEXT TU Sƒ®

print("DEBUG: Action UI Frames and Buttons created.")

-- REMOVED: InfJumpLabel (user clarified it's not a UI element)


-- X√≥a Mobile Controls Frame (v√¨ gi·ªù c√≥ UI c·ªë ƒë·ªãnh)
if mainUI:FindFirstChild("MobileControls") then
	mainUI.MobileControls:Destroy()
	print("DEBUG: MobileControls frame removed.")
end

-- === TH√äM C√ÅC N·ªÄN T·∫¢NG TH·∫æ GI·ªöI ===
local function createWorldPlatform(name, position, size, color)
	local platform = Instance.new("Part")
	platform.Name = name
	platform.Size = size
	platform.Position = position
	platform.Color = color
	platform.Material = Enum.Material.Grass -- ƒê·∫∑t v·∫≠t li·ªáu l√† c·ªè
	platform.Anchored = true
	platform.CanCollide = true
	platform.Parent = game:GetService("Workspace")
	print("DEBUG: Created world platform '" .. name .. "' at " .. tostring(position))
	return platform
end

-- T·∫°o Ph√†m Gi·ªõi
local phamGioiPlatform = createWorldPlatform("PhamGioiPlatform", PHAM_GIOI_POS, WORLD_PLATFORM_SIZE_PHAM_GIOI, PHAM_GIOI_COLOR)

-- T·∫°o Tu Ti√™n Gi·ªõi
local tuTienGioiPlatform = createWorldPlatform("TuTienGioiPlatform", TU_TIEN_GIOI_POS, WORLD_PLATFORM_SIZE_TU_TIEN, TU_TIEN_GIOI_COLOR)


-- üìà Tham s·ªë (Data)
local realmList = {
	"Ph√†m Nh√¢n", -- NEW: C·∫£nh gi·ªõi ƒë·∫ßu ti√™n, kh√¥ng c√≥ t·∫ßng
	"Luy·ªán Kh√≠", "Tr√∫c C∆°", "Kim ƒêan", "Nguy√™n Anh", "H√≥a Th·∫ßn", "Luy·ªán H∆∞", "H·ª£p Th·ªÉ", "ƒê·∫°i Th·ª´a", "ƒê·ªô Ki·∫øp",
	"Ch√¢n Ti√™n", "ƒê·ªãa Ti√™n", "Huy·ªÅn Ti√™n", "Thi√™n Ti√™n", "Kim Ti√™n", "Th√°i ·∫§t Kim Ti√™n", "ƒê·∫°i La Kim Ti√™n",
	"H·ªón Nguy√™n ƒê·∫°i La Kim Ti√™n", "Chu·∫©n Th√°nh", "Th√°nh Nh√¢n", "Chu·∫©n ƒê·∫ø", "ƒê·∫°i ƒê·∫ø" -- ƒê·∫°i ƒê·∫ø l√† c·∫£nh gi·ªõi cu·ªëi c√πng
}
local PHAM_NHAN_INDEX = 1 -- Ch·ªâ s·ªë c·ªßa c·∫£nh gi·ªõi Ph√†m Nh√¢n
local LUYEN_KHI_INDEX = 2 -- Ch·ªâ s·ªë c·ªßa Luy·ªán Kh√≠
local KIM_DAN_INDEX = 4 -- Ch·ªâ s·ªë c·ªßa Kim ƒêan
local DAI_DE_INDEX = #realmList -- Ch·ªâ s·ªë c·ªßa c·∫£nh gi·ªõi ƒê·∫°i ƒê·∫ø trong realmList

local linhCanList = {
	"Kim Linh CƒÉn", "M·ªôc Linh CƒÉn", "Th·ªßy Linh CƒÉn", "H·ªèa Linh CƒÉn", "Th·ªï Linh CƒÉn", "L√¥i Linh CƒÉn", "BƒÉng Linh CƒÉn", "Quang Linh CƒÉn", "Phong Linh CƒÉn", "√Åm Linh CƒÉn",
	"Kh√¥ng Gian Linh CƒÉn", "Th·ªùi Gian Linh CƒÉn", "ƒê·ªôc Linh CƒÉn",
	"V·∫≠n M·ªánh Linh CƒÉn", "Nh√¢n Qu·∫£ Linh CƒÉn"
}
local theChatList = {
	"Hoang C·ªï Th√°nh Th·ªÉ", "Th√°i C·ªï Chi·∫øn Th·ªÉ", "B·∫•t Di·ªát Th·ªÉ", "B·∫•t T·ª≠ Th·ªÉ",
	"V√µ Th·ªÉ", "Kim Th√¢n", "B·∫•t Ho·∫°i Kim Th√¢n", "Long T∆∞·ª£ng B√° Th·ªÉ",
	"Ti√™n Thi√™n ƒê·∫°o Th·ªÉ", "H·ªón ƒê·ªôn Th·ªÉ", "V√¥ C·∫•u Ti√™n Th·ªÉ", "ƒêan Th·ªÉ",
	"Kh√≠ V·∫≠n Th·ªÉ", "May M·∫Øn Th·ªÉ", "Minh Ti√™n Th·ªÉ", "H·ªìn Th·ªÉ",
	"Thu·∫ßn √Çm Th·ªÉ", "Thu·∫ßn D∆∞∆°ng Th·ªÉ", "Th√¥ng Linh Th·ªÉ",
	"Ch√¢n Long Th·ªÉ", "Ph∆∞·ª£ng Ho√†ng Th·ªÉ", "K·ª≥ L√¢n Th·ªÉ",
	"Th√°i C·ªï Di Ch·ªßng Th·ªÉ", "Vu Th·∫ßn Th·ªÉ", "C·ªï Th·∫ßn Th·∫ßn", "Ma Th·∫ßn Th·∫ßn",
	"Y√™u Th·∫ßn Th·ªÉ", "Qu·ª∑ Th·∫ßn Th·ªÉ", "Nh√¢n V∆∞∆°ng Th·ªÉ", "B√° V∆∞∆°ng Th·ªÉ"
}

-- H·ªá th·ªëng Ki·∫øp
local kiepNames = {
	[1] = "Nh·∫•t Ki·∫øp", [2] = "Nh·ªã Ki·∫øp", [3] = "Tam Ki·∫øp", [4] = "T·ª© Ki·∫øp",
	[5] = "Ng≈© Ki·∫øp", [6] = "L·ª•c Ki·∫øp", [7] = "Th·∫•t Ki·∫øp", [8] = "B√°t Ki·∫øp",
	[9] = "C·ª≠u Ki·∫øp"
}

-- === H√ÄM H·ªñ TR·ª¢ L∆ØU V√Ä T·∫¢I D·ªÆ LI·ªÜU B·ªÄN B·ªà D√ôNG ATTRIBUTES ===
local function getAttribute(name, defaultValue)
	local value = player:GetAttribute(name)
	if value == nil then
		player:SetAttribute(name, defaultValue)
		print("DEBUG: Initializing attribute '" .. name .. "' with default value: " .. tostring(defaultValue))
		return defaultValue
	end
	print("DEBUG: Loaded attribute '" .. name .. "': " .. tostring(value))
	return value
end

local function setAttribute(name, value)
	player:SetAttribute(name, value)
	print("DEBUG: Set attribute '" .. name .. "' to: " .. tostring(value))
end

-- L·∫•y d·ªØ li·ªáu t·ª´ Attributes ho·∫∑c kh·ªüi t·∫°o m·∫∑c ƒë·ªãnh n·∫øu ch∆∞a c√≥
local maxChanNguyen = getAttribute("MaxChanNguyen", 500) -- ƒê·∫£m b·∫£o MaxChanNguyen ƒë∆∞·ª£c t·∫£i/kh·ªüi t·∫°o tr∆∞·ªõc
local canhGioiIndex = getAttribute("CanhGioiIndex", PHAM_NHAN_INDEX) -- B·∫Øt ƒë·∫ßu l√† Ph√†m Nh√¢n
local tang = getAttribute("Tang", 0) -- Ph√†m Nh√¢n kh√¥ng c√≥ t·∫ßng, n√™n kh·ªüi t·∫°o l√† 0
local tuVi = getAttribute("TuVi", 0)
local maxTuVi = getAttribute("MaxTuVi", 100) -- maxTuVi ban ƒë·∫ßu l√† 100
local currentKhiHuyet = getAttribute("KhiHuyet", 100) -- ƒê√£ ch·ªânh Kh√≠ Huy·∫øt ban ƒë·∫ßu c·ªßa Ph√†m Nh√¢n l√† 100
local currentChanNguyen = getAttribute("ChanNguyen", maxChanNguyen) -- Kh·ªüi t·∫°o Ch√¢n Nguy√™n ƒë·∫ßy theo MaxChanNguyen
local currentAge = getAttribute("Age", 20) -- Bi·∫øn Tu·ªïi
local currentKi = getAttribute("Ki", 100) -- Kh√≠ ban ƒë·∫ßu
local maxKi = getAttribute("MaxKi", 100) -- Max Kh√≠ ban ƒë·∫ßu

-- Ng·∫´u nhi√™n Linh CƒÉn v√† Th·ªÉ Ch·∫•t, ch·ªâ khi ch√∫ng ch∆∞a ƒë∆∞·ª£c l∆∞u
local linhCanIndex = getAttribute("LinhCanIndex", math.random(1, #linhCanList))
local theChatIndex = getAttribute("TheChatIndex", math.random(1, #theChatList))
local currentKiep = getAttribute("Kiep", 0) -- 0: ch∆∞a ƒê·∫°i ƒê·∫ø, 1-9: Ki·∫øp c·ªßa ƒê·∫°i ƒê·∫ø
local chuyenTheCount = getAttribute("ChuyenTheCount", 0) -- S·ªë l·∫ßn chuy·ªÉn th·∫ø ƒë√£ th·ª±c hi·ªán (l·∫ßn 0 l√† ch∆∞a chuy·ªÉn th·∫ø l·∫ßn n√†o)
local maxUnlockedKiep = getAttribute("MaxUnlockedKiep", 0) -- Ki·∫øp cao nh·∫•t c√≥ th·ªÉ ƒë·∫°t ƒë∆∞·ª£c trong ki·∫øp n√†y (ƒë∆∞·ª£c m·ªü kh√≥a b·ªüi Chuy·ªÉn Th·∫ø)

-- ƒê·∫£m b·∫£o maxUnlockedKiep ƒë∆∞·ª£c kh·ªüi t·∫°o ƒë√∫ng n·∫øu chuyenTheCount l√† 0 (ch∆∞a chuy·ªÉn th·∫ø l·∫ßn n√†o)
-- N·∫øu chuyenTheCount l√† 0, th√¨ maxUnlockedKiep m·∫∑c ƒë·ªãnh ph·∫£i l√† 1 (ch·ªâ m·ªü kh√≥a Nh·∫•t Ki·∫øp)
if chuyenTheCount == 0 and maxUnlockedKiep == 0 then
	maxUnlockedKiep = 1
	setAttribute("MaxUnlockedKiep", maxUnlockedKiep)
	print("DEBUG: Initialized MaxUnlockedKiep to 1 for new player (ChuyenTheCount is 0).")
elseif chuyenTheCount > 0 and maxUnlockedKiep == 0 then
	-- N·∫øu c√≥ Chuy·ªÉn Th·∫ø nh∆∞ng maxUnlockedKiep l·∫°i l√† 0, t√≠nh l·∫°i cho an to√†n
	maxUnlockedKiep = math.min(chuyenTheCount + 1, 9)
	setAttribute("MaxUnlockedKiep", maxUnlockedKiep)
	print("DEBUG: Recalculated MaxUnlockedKiep based on existing ChuyenTheCount:", maxUnlockedKiep)
end

local tuLuyen = false
local heSoLinhCan = 9000000000000000000000 -- T·ªëc ƒë·ªô tu luy·ªán
local isMovementLocked = false
local tuLuyenTrack = nil

-- Bi·∫øn cho ch·ª©c nƒÉng Th√¢n Th·ªÉ (ƒë√£ lo·∫°i b·ªè isFlyJumping)
local isThanTheActive = false -- ƒê√£ ƒë·ªìng nh·∫•t bi·∫øn tr·∫°ng th√°i
local flyJumpBoost = 250 -- L·ª±c nh·∫£y cao h∆°n
local flySpeed = 50 -- T·ªëc ƒë·ªô ƒëi b·ªô khi bay
local originalGravity = game.Workspace.Gravity -- L·∫•y tr·ªçng l·ª±c g·ªëc c·ªßa game
local slowFallGravity = 20 -- Tr·ªçng l·ª±c khi r∆°i t·ª´ t·ª´ (Kim ƒêan T·∫ßng 1)
local defaultWalkSpeed = 16
local defaultJumpPower = 50
local airJumpForce = 80 -- L·ª±c ƒë·∫©y m·ªói l·∫ßn nh·∫£y tr√™n kh√¥ng

-- NEW: Chi ph√≠ Ch√¢n Nguy√™n cho Th√¢n Th·ªÉ
local CHAN_NGUYEN_PER_JUMP_COST = 50 -- Chi ph√≠ m·ªói l·∫ßn nh·∫£y tr√™n kh√¥ng (Infjump)
local CHAN_NGUYEN_PER_SECOND_MOVE_COST = 5 -- Chi ph√≠ m·ªói gi√¢y di chuy·ªÉn

-- NEW: Bi·∫øn cho ch·ª©c nƒÉng Tu Sƒ©
local isTuSiActive = false -- Tr·∫°ng th√°i c·ªßa ch·∫ø ƒë·ªô Tu Sƒ©
local tuSiAnimTrack = nil -- Animation track cho Tu Sƒ©

-- === ID Animation ===
local TU_LUYEN_ANIM_ID = "rbxassetid://123850459311366" -- ƒê√É C·∫¨P NH·∫¨T ANIMATION ID M·ªöI
local THAN_THE_ANIM_ID = "rbxassetid://110143058252764" -- TH√äM ANIMATION ID CHO TH√ÇN TH·ªÇ T·∫†I ƒê√ÇY
local TU_SI_ANIM_ID = "rbxassetid://129701665182915" -- NEW: ID Animation cho Tu Sƒ© (ƒë·∫∑t tay sau l∆∞ng)

-- === KHAI B√ÅO BI·∫æN CHO NH√ÇN V·∫¨T V√Ä C√ÅC TH√ÄNH PH·∫¶N ===
local character
local humanoid
local rootPart
local animator
local healthChangedConnection

-- === PH·∫¶N C·∫¶N TH√äM ƒê·ªÇ ƒêI·ªÄU KHI·ªÇN S·ª®C KH·ªéE NG∆Ø·ªúI CH∆†I ===
-- H√†m n√†y s·∫Ω ƒë∆∞·ª£c g·ªçi m·ªói khi currentKhiHuyet thay ƒë·ªïi HO·∫∂C khi Humanoid b·ªã m·∫•t m√°u
local function updatePlayerHealthAndStats(newMaxHealth)
	print("DEBUG: updatePlayerHealthAndStats called with newMaxHealth:", newMaxHealth)
	if humanoid then
		humanoid.MaxHealth = newMaxHealth -- C·∫≠p nh·∫≠t MaxHealth c·ªßa Humanoid
		humanoid.Health = newMaxHealth -- H·ªìi ƒë·∫ßy m√°u c·ªßa Humanoid v·ªÅ MaxHealth m·ªõi
		-- ƒê√É S·ª¨A: Hi·ªÉn th·ªã Kh√≠ Huy·∫øt d∆∞·ªõi d·∫°ng hi·ªán t·∫°i/t·ªëi ƒëa
		khiHuyetLabel.Text = "Kh√≠ Huy·∫øt: " .. tostring(math.floor(humanoid.Health)) .. "/" .. tostring(math.floor(humanoid.MaxHealth)) -- C·∫≠p nh·∫≠t label
		print(string.format("DEBUG: Humanoid stats updated: MaxHealth=%.2f, Health=%.2f. Speed/Jump buffs removed.",
			humanoid.MaxHealth, humanoid.Health))
	else
		warn("DEBUG: Humanoid is nil in updatePlayerHealthAndStats. Cannot update player's health.")
	end
end

-- H√†m kh√≥a/m·ªü kh√≥a di chuy·ªÉn c·ªßa ng∆∞·ªùi ch∆°i
local function toggleMovementLock(lockState)
	print("DEBUG: toggleMovementLock called. Proposed lockState:", tostring(lockState))
	isMovementLocked = lockState
	if humanoid then
		humanoid.WalkSpeed = isMovementLocked and 0 or defaultWalkSpeed
		humanoid.JumpPower = isMovementLocked and 0 or defaultJumpPower
		print("DEBUG: Movement locked: " .. tostring(isMovementLocked) .." . WalkSpeed: " .. humanoid.WalkSpeed .." , JumpPower: " .. humanoid.JumpPower)
	else
		warn("DEBUG: Humanoid is nil in toggleMovementLock. Cannot lock/unlock movement.")
	end
end

-- H√†m c·∫≠p nh·∫≠t hi·ªÉn th·ªã v√† text cho c√°c n√∫t h√†nh ƒë·ªông
local function updateActionButtonsVisibility()

	-- ƒêi·ªÅu ki·ªán ƒë·ªÉ hi·ªán n√∫t Chuy·ªÉn Th·∫ø
	-- Ch·ªâ hi·ªán n·∫øu ƒëang l√† ƒê·∫°i ƒê·∫ø, ƒë√£ ƒë·∫°t ƒë·ªß Ki·∫øp t·ªëi ƒëa cho l·∫ßn chuy·ªÉn th·∫ø n√†y, v√† ƒë·ªß Tu Vi
	if canhGioiIndex == DAI_DE_INDEX and currentKiep == maxUnlockedKiep and tuVi >= maxTuVi then
		dotPhaFrame.Visible = false -- ·∫®n n√∫t ƒê·ªôt Ph√°
		chuyenTheFrame.Visible = true -- Hi·ªán n√∫t Chuy·ªÉn Th·∫ø
		chuyenTheButton.Text = "Chuy·ªÉn Th·∫ø (V)" -- Kh√¥ng c·∫ßn hi·ªÉn th·ªã Ki·∫øp ·ªü ƒë√¢y
		chuyenTheButton.Active = true
		chuyenTheButton.BackgroundTransparency = 0.5
		print("DEBUG: Chuy·ªÉn Th·∫ø button is visible. ƒê·ªôt Ph√° button is hidden.")
	else -- C√°c tr∆∞·ªùng h·ª£p kh√°c
		dotPhaFrame.Visible = true
		chuyenTheFrame.Visible = false

		if tuVi >= maxTuVi then
			dotPhaButton.Text = "ƒê·ªôt Ph√° (B)"
			dotPhaButton.Active = true
			dotPhaButton.BackgroundTransparency = 0.5
			print("DEBUG: ƒê·ªôt Ph√° button is active and visible (Tu Vi ƒë·ªß).")
		else
			dotPhaButton.Text = "ƒê·ªôt Ph√° (B)" -- V·∫´n hi·ªÉn th·ªã "ƒê·ªôt Ph√° (B)" nh∆∞ng n√∫t b·ªã v√¥ hi·ªáu h√≥a
			dotPhaButton.Active = false
			dotPhaButton.BackgroundTransparency = 0.8
			print("DEBUG: ƒê·ªôt Ph√° button is inactive and visible (Tu Vi ch∆∞a ƒë·ªß).")
		end

		-- Logic ri√™ng cho ƒê·∫°i ƒê·∫ø ƒë√£ ƒë·∫°t gi·ªõi h·∫°n Ki·∫øp
		if canhGioiIndex == DAI_DE_INDEX and currentKiep >= maxUnlockedKiep then
			dotPhaButton.Text = "ƒê√£ ƒê·∫°t Gi·ªõi H·∫°n Ki·∫øp!"
			dotPhaButton.Active = false
			dotPhaButton.BackgroundTransparency = 0.8
			print("DEBUG: ƒê·∫°i ƒê·∫ø ƒë√£ ƒë·∫°t gi·ªõi h·∫°n Ki·∫øp, ƒê·ªôt Ph√° button is inactive.")
		end
	end
	-- C·∫≠p nh·∫≠t text cho n√∫t Tu Luy·ªán
	tuLuyenButton.Text = tuLuyen and "D·ª´ng Tu Luy·ªán" or "Tu Luy·ªán (C)"
	tuLuyenButton.BackgroundTransparency = tuLuyen and 0.2 or 0.5

	-- C·∫≠p nh·∫≠t text cho n√∫t Th√¢n Th·ªÉ
	thanTheButton.Text = isThanTheActive and "D·ª´ng Th√¢n Th·ªÉ" or "Th√¢n Th·ªÉ"
	thanTheButton.BackgroundTransparency = isThanTheActive and 0.2 or 0.5

	-- C·∫≠p nh·∫≠t text cho n√∫t Tu Sƒ©
	tuSiButton.Text = isTuSiActive and "D·ª´ng Tu Sƒ©" or "Tu Sƒ©" -- ƒê√É S·ª¨A TEXT
	tuSiButton.BackgroundTransparency = isTuSiActive and 0.2 or 0.5

	print("DEBUG: Action button texts and transparencies updated.")
end

-- üîÑ C·∫≠p nh·∫≠t UI (g·ªçi m·ªói khi ch·ªâ s·ªë thay ƒë·ªïi)
local function updateUI()
	print("DEBUG: updateUI called. Updating labels and progress bar.")
	-- C·∫≠p nh·∫≠t hi·ªÉn th·ªã C·∫£nh Gi·ªõi
	if canhGioiIndex == PHAM_NHAN_INDEX then
		canhGioiLabel.Text = "C·∫£nh Gi·ªõi: " .. realmList[canhGioiIndex]
	elseif canhGioiIndex == DAI_DE_INDEX then
		canhGioiLabel.Text = "C·∫£nh Gi·ªõi: " .. realmList[canhGioiIndex] .. (currentKiep > 0 and " " .. kiepNames[currentKiep] or "")
	else -- C√°c c·∫£nh gi·ªõi kh√°c c√≥ t·∫ßng
		canhGioiLabel.Text = "C·∫£nh Gi·ªõi: " .. realmList[canhGioiIndex] .. (tang > 0 and " T·∫ßng " .. tang or "")
	end

	linhCanLabel.Text = "Linh CƒÉn: " .. linhCanList[linhCanIndex]
	theChatLabel.Text = "Th·ªÉ Ch·∫•t: " .. theChatList[theChatIndex]

	-- Ensure humanoid exists before trying to access its health
	if humanoid then
		-- ƒê√É S·ª¨A: Hi·ªÉn th·ªã Kh√≠ Huy·∫øt d∆∞·ªõi d·∫°ng hi·ªán t·∫°i/t·ªëi ƒëa
		khiHuyetLabel.Text = "Kh√≠ Huy·∫øt: " .. tostring(math.floor(humanoid.Health)) .. "/" .. tostring(math.floor(humanoid.MaxHealth))
	else
		khiHuyetLabel.Text = "Kh√≠ Huy·∫øt: ƒêang t·∫£i..."
	end

	chanNguyenLabel.Text = "Ch√¢n Nguy√™n: " .. tostring(math.floor(currentChanNguyen)) .. "/" .. tostring(math.floor(maxChanNguyen))
	ageLabel.Text = "Tu·ªïi: " .. tostring(math.floor(currentAge)) -- Hi·ªÉn th·ªã tu·ªïi l√†m tr√≤n

	tuViBar:TweenSize(UDim2.new(tuVi / maxTuVi, 0, 1, 0), "Out", "Quad", 0.1, true)
	print(string.format("DEBUG: UI updated. Canh Gioi: %s, Tu Vi: %.2f/%.2f, KhiHuyet: %s, ChanNguyen: %s, Age: %.2f",
		canhGioiLabel.Text, tuVi, maxTuVi, khiHuyetLabel.Text, chanNguyenLabel.Text, currentAge))
	updateActionButtonsVisibility() -- ƒê·∫£m b·∫£o c√°c n√∫t hi·ªÉn th·ªã ƒë√∫ng
end

-- H√†m ƒë·ªÉ d·ªãch chuy·ªÉn nh√¢n v·∫≠t t·ªõi m·ªôt v·ªã tr√≠ (ƒê√É GI·ªÆ L·∫†I, M·∫∂C D√ô KH√îNG C√íN N√öT D·ªäCH CHUY·ªÇN)
local function teleportPlayer(position)
	if character and humanoid then
		humanoid.WalkSpeed = 0 -- Ng·ª´ng di chuy·ªÉn khi d·ªãch chuy·ªÉn
		humanoid.JumpPower = 0
		character.HumanoidRootPart.CFrame = CFrame.new(position)
		task.wait(0.1) -- ƒê·ª£i m·ªôt ch√∫t ƒë·ªÉ nh√¢n v·∫≠t ·ªïn ƒë·ªãnh
		humanoid.WalkSpeed = defaultWalkSpeed -- Kh√¥i ph·ª•c t·ªëc ƒë·ªô m·∫∑c ƒë·ªãnh
		humanoid.JumpPower = defaultJumpPower
	end
end

-- üé¨ Animation Tu Luy·ªán (thi·ªÅn)
local function playTuLuyenAnimation()
	print("DEBUG: playTuLuyenAnimation called.")
	if not humanoid or not character then
		warn("ERROR: Humanoid or Character is nil. Cannot play animation.")
		return
	end

	-- Ensure animator exists
	if not animator or not animator.Parent then
		animator = humanoid:FindFirstChildOfClass("Animator")
		if not animator then
			warn("ERROR: Animator not found on Humanoid. Creating new one.")
			animator = Instance.new("Animator")
			animator.Parent = humanoid
		end
	end

	if TU_LUYEN_ANIM_ID ~= "" then
		local anim = Instance.new("Animation")
		anim.AnimationId = TU_LUYEN_ANIM_ID
		print("DEBUG: Attempting to load animation with ID:", TU_LUYEN_ANIM_ID)
		local success, err = pcall(function()
			tuLuyenTrack = animator:LoadAnimation(anim)
		end)
		if success and tuLuyenTrack then
			tuLuyenTrack.Priority = Enum.AnimationPriority.Action
			tuLuyenTrack.Looped = true
			tuLuyenTrack:Play()
			print("DEBUG: Playing Tu Luyen Animation:", TU_LUYEN_ANIM_ID)
		else
			warn("ERROR: Failed to load or play Tu Luyen Animation! Error:", err, "Animator:", animator, "AnimationId:", TU_LUYEN_ANIM_ID)
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "L·ªói Animation";
				Text = "Kh√¥ng th·ªÉ t·∫£i/ch∆°i animation! Ki·ªÉm tra ID v√† Output (F9).";
				Duration = 4
			})
		end
	else
		warn("WARNING: AnimationId is empty for Tu Luyen Animation!")
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "L·ªói Animation";
			Text = "ID Animation Tu Luy·ªán ƒëang tr·ªëng!";
			Duration = 3
		})
	end
end

local function stopTuLuyenAnimation()
	print("DEBUG: stopTuLuyenAnimation called.")
	if tuLuyenTrack then
		tuLuyenTrack:Stop()
		tuLuyenTrack = nil
		print("DEBUG: Stopped Tu Luyen Animation.")
	end
end
print("DEBUG: stopTuLuyenAnimation defined.")


-- NEW: Th√¢n Th·ªÉ Animation functions
local thanTheAnimTrack = nil
local function playThanTheAnimation()
	print("DEBUG: playThanTheAnimation called for Th√¢n Th·ªÉ.")
	if not humanoid or not character then
		warn("ERROR: Humanoid or Character is nil. Cannot play Th√¢n Th·ªÉ animation.")
		return
	end

	if not animator or not animator.Parent then
		animator = humanoid:FindFirstChildOfClass("Animator")
		if not animator then
			warn("ERROR: Animator not new one.")
			animator = Instance.new("Animator")
			animator.Parent = humanoid
		end
	end

	if THAN_THE_ANIM_ID ~= "" and THAN_THE_ANIM_ID ~= "rbxassetid://" then
		local anim = Instance.new("Animation")
		anim.AnimationId = THAN_THE_ANIM_ID
		print("DEBUG: Attempting to load animation for Th√¢n Th·ªÉ with ID:", THAN_THE_ANIM_ID)
		local success, err = pcall(function()
			thanTheAnimTrack = animator:LoadAnimation(anim)
		end)
		if success and thanTheAnimTrack then
			thanTheAnimTrack.Priority = Enum.AnimationPriority.Action
			thanTheAnimTrack.Looped = true
			thanTheAnimTrack:Play()
			print("DEBUG: Playing Th√¢n Th·ªÉ Animation:", THAN_THE_ANIM_ID)

			-- Debug: Check if animation is still playing after a short wait
			task.wait(0.1)
			if thanTheAnimTrack and thanTheAnimTrack.IsPlaying then
				print("DEBUG: Th√¢n Th·ªÉ Animation is still playing after 0.1s. TimePosition:", thanTheAnimTrack.TimePosition)
			else
				print("DEBUG: Th√¢n Th·ªÉ Animation is NOT playing after 0.1s. It might have been stopped or overridden immediately.")
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "L·ªói Animation Th√¢n Th·ªÉ";
					Text = "Ho·∫°t ·∫£nh b·ªã d·ª´ng/ghi ƒë√® ngay l·∫≠p t·ª©c!";
					Duration = 5
				})
			end

		else
			warn("ERROR: Failed to load or play Th√¢n Th·ªÉ Animation! Error:", err)
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "L·ªói Animation Th√¢n Th·ªÉ";
				Text = "Kh√¥ng th·ªÉ t·∫£i/ch∆°i animation Th√¢n Th·ªÉ! Ki·ªÉm tra ID v√† Output (F9).";
				Duration = 4
			})
		end
	else
		warn("WARNING: AnimationId is empty or default for Th√¢n Th·ªÉ Animation!")
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "L·ªói Animation Th√¢n Th·ªÉ";
			Text = "ID Animation Th√¢n Th·ªÉ ƒëang tr·ªëng ho·∫∑c l√† gi√° tr·ªã m·∫∑c ƒë·ªãnh! Vui l√≤ng thay ƒë·ªïi.";
			Duration = 3
		})
	end
end

local function stopThanTheAnimation()
	if thanTheAnimTrack then
		thanTheAnimTrack:Stop()
		thanTheAnimTrack = nil
		print("DEBUG: Stopped Th√¢n Th·ªÉ Animation.")
	end
end

-- NEW: H√†m cho ch·∫ø ƒë·ªô Tu Sƒ©
local function playTuSiAnimation()
	print("DEBUG: playTuSiAnimation called.")
	if not humanoid or not character then
		warn("ERROR: Humanoid or Character is nil. Cannot play Tu Sƒ© animation.")
		return
	end

	if not animator or not animator.Parent then
		animator = humanoid:FindFirstChildOfClass("Animator")
		if not animator then
			warn("ERROR: Animator not found on Humanoid. Creating new one.")
			animator = Instance.new("Animator")
			animator.Parent = humanoid
		end
	end

	if TU_SI_ANIM_ID ~= "" and TU_SI_ANIM_ID ~= "rbxassetid://" then
		local anim = Instance.new("Animation")
		anim.AnimationId = TU_SI_ANIM_ID
		print("DEBUG: Attempting to load animation for Tu Sƒ© with ID:", TU_SI_ANIM_ID)
		local success, err = pcall(function()
			tuSiAnimTrack = animator:LoadAnimation(anim)
		end)
		if success and tuSiAnimTrack then
			tuSiAnimTrack.Priority = Enum.AnimationPriority.Action
			tuSiAnimTrack.Looped = true
			tuSiAnimTrack:Play()
			print("DEBUG: Playing Tu Sƒ© Animation:", TU_SI_ANIM_ID)
		else
			warn("ERROR: Failed to load or play Tu Sƒ© Animation! Error:", err)
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "L·ªói Animation Tu Sƒ©";
				Text = "Kh√¥ng th·ªÉ t·∫£i/ch∆°i animation Tu Sƒ©! Ki·ªÉm tra ID v√† Output (F9).";
				Duration = 4
			})
		end
	else
		warn("WARNING: AnimationId is empty or default for Tu Sƒ© Animation!")
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "L·ªói Animation Tu Sƒ©";
			Text = "ID Animation Tu Sƒ© ƒëang tr·ªëng ho·∫∑c l√† gi√° tr·ªã m·∫∑c ƒë·ªãnh! Vui l√≤ng thay ƒë·ªïi.";
			Duration = 3
		})
	end
end

local function stopTuSiAnimation()
	if tuSiAnimTrack then
		tuSiAnimTrack:Stop()
		tuSiAnimTrack = nil
		print("DEBUG: Stopped Tu Sƒ© Animation.")
	end
end

-- H√†m x·ª≠ l√Ω logic b·∫≠t/t·∫Øt tu luy·ªán (ch·ªâ animation v√† di chuy·ªÉn)
local function toggleTuLuyenState()
	print("DEBUG: toggleTuLuyenState called. Current tuLuyen state:", tuLuyen)
	-- N·∫øu ƒëang b·∫≠t Tu Luy·ªán, th√¨ t·∫Øt n√≥
	if tuLuyen then
		tuLuyen = false
		stopTuLuyenAnimation()
		toggleMovementLock(false) -- M·ªü di chuy·ªÉn khi d·ª´ng tu luy·ªán
	else -- N·∫øu ƒëang t·∫Øt Tu Luy·ªán, th√¨ b·∫≠t n√≥ v√† t·∫Øt c√°c ch·∫ø ƒë·ªô kh√°c
		tuLuyen = true
		playTuLuyenAnimation()
		toggleMovementLock(true) -- Kh√≥a di chuy·ªÉn khi tu luy·ªán

		-- ƒê·∫£m b·∫£o t·∫Øt c√°c tr·∫°ng th√°i kh√°c n·∫øu ƒëang b·∫≠t
		if isThanTheActive then
			isThanTheActive = false
			stopThanTheAnimation()
			if humanoid then
				humanoid.WalkSpeed = defaultWalkSpeed
				humanoid.JumpPower = defaultJumpPower
				humanoid.UseGravity = true
			end
		end
		if isTuSiActive then
			isTuSiActive = false
			stopTuSiAnimation()
		end
	end
	updateActionButtonsVisibility() -- C·∫≠p nh·∫≠t text/hi·ªÉn th·ªã n√∫t
	print("DEBUG: New tuLuyen state: " .. tostring(tuLuyen))
end

print("DEBUG: toggleTuLuyenState defined.")

local function toggleThanTheState()
	print("DEBUG: toggleThanTheState called. Current ThanThe state:", isThanTheActive)
	if isThanTheActive then -- N·∫øu ƒëang b·∫≠t Th√¢n Th·ªÉ, th√¨ t·∫Øt n√≥
		isThanTheActive = false
		stopThanTheAnimation()
		if humanoid then
			humanoid.WalkSpeed = defaultWalkSpeed -- Kh√¥i ph·ª•c t·ªëc ƒë·ªô m·∫∑c ƒë·ªãnh
			humanoid.JumpPower = defaultJumpPower -- Kh√¥i ph·ª•c l·ª±c nh·∫£y m·∫∑c ƒë·ªãnh
			humanoid.UseGravity = true            -- Kh√¥i ph·ª•c tr·ªçng l·ª±c
		end
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Ch·∫ø ƒë·ªô Th√¢n Th·ªÉ";
			Text = "Ch·∫ø ƒë·ªô Th√¢n Th·ªÉ ƒë√£ ƒë∆∞·ª£c t·∫Øt.";
			Duration = 3
		})
	else -- N·∫øu ƒëang t·∫Øt Th√¢n Th·ªÉ, th√¨ b·∫≠t n√≥ v√† t·∫Øt c√°c ch·∫ø ƒë·ªô kh√°c
		isThanTheActive = true
		playThanTheAnimation()
		if humanoid then
			humanoid.WalkSpeed = flySpeed     -- TƒÉng t·ªëc ƒë·ªô
			humanoid.JumpPower = flyJumpBoost -- TƒÉng l·ª±c nh·∫£y
			humanoid.UseGravity = false       -- V√¥ hi·ªáu h√≥a tr·ªçng l·ª±c (t·∫°o hi·ªáu ·ª©ng l∆° l·ª≠ng/inf jump)
		end
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Ch·∫ø ƒë·ªô Th√¢n Th·ªÉ";
			Text = "Ch·∫ø ƒë·ªô Th√¢n Th·ªÉ ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t! TƒÉng t·ªëc ƒë·ªô, nh·∫£y cao v√† kh·∫£ nƒÉng H∆∞ Kh√¥ng (l∆° l·ª≠ng).";
			Duration = 4
		})

		-- ƒê·∫£m b·∫£o t·∫Øt c√°c tr·∫°ng th√°i kh√°c n·∫øu ƒëang b·∫≠t
		if tuLuyen then
			tuLuyen = false
			stopTuLuyenAnimation()
			toggleMovementLock(false)
		end
		if isTuSiActive then
			isTuSiActive = false
			stopTuSiAnimation()
		end
	end
	updateUI() -- C·∫≠p nh·∫≠t UI
	print("DEBUG: New ThanThe state: " .. tostring(isThanTheActive))
end
print("DEBUG: toggleThanTheState defined.")

local function toggleTuSiState()
	print("DEBUG: toggleTuSiState called. Current Tu Sƒ© state:", isTuSiActive)
	if isTuSiActive then -- N·∫øu ƒëang b·∫≠t Tu Sƒ©, th√¨ t·∫Øt n√≥
		isTuSiActive = false
		stopTuSiAnimation()
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Ch·∫ø ƒë·ªô Tu Sƒ©";
			Text = "Ch·∫ø ƒë·ªô Tu Sƒ© ƒë√£ ƒë∆∞·ª£c t·∫Øt.";
			Duration = 3
		})
	else -- N·∫øu ƒëang t·∫Øt Tu Sƒ©, th√¨ b·∫≠t n√≥ v√† t·∫Øt c√°c ch·∫ø ƒë·ªô kh√°c
		isTuSiActive = true
		playTuSiAnimation()
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Ch·∫ø ƒë·ªô Tu Sƒ©";
			Text = "Ch·∫ø ƒë·ªô Tu Sƒ© ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t! B·∫°n c√≥ v·∫ª nh∆∞ m·ªôt Tu Ti√™n Gi·∫£.";
			Duration = 4
		})

		-- ƒê·∫£m b·∫£o t·∫Øt c√°c tr·∫°ng th√°i kh√°c n·∫øu ƒëang b·∫≠t
		if tuLuyen then
			tuLuyen = false
			stopTuLuyenAnimation()
			toggleMovementLock(false)
		end
		if isThanTheActive then
			isThanTheActive = false
			stopThanTheAnimation()
			if humanoid then
				humanoid.WalkSpeed = defaultWalkSpeed
				humanoid.JumpPower = defaultJumpPower
				humanoid.UseGravity = true
			end
		end
	end
	updateUI()
	print("DEBUG: New Tu Sƒ© state: " .. tostring(isTuSiActive))
end
print("DEBUG: toggleTuSiState defined.")

-- C√°c h√†m x·ª≠ l√Ω giao di·ªán
-- H√†m hi·ªÉn th·ªã th√¥ng b√°o
local function showNotification(title, message, duration)
	game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = title,
		Text = message,
		Duration = duration
	})
end

-- *** CH·ª®C NƒÇNG CH√çNH: ƒê·ªòT PH√Å *** (UPDATED by user)
local function dotPha()
	print("DEBUG: dotPha() called.")
	-- if tuLuyen then toggleTuLuyenState() end -- ƒê√£ comment d√≤ng n√†y ƒë·ªÉ kh√¥ng d·ª´ng tu luy·ªán khi ƒë·ªôt ph√°

	if tuVi >= maxTuVi then
		if rootPart then
			local explosion = Instance.new("Explosion")
			explosion.Parent = game:GetService("Workspace")
			explosion.Position = rootPart.Position
			explosion.BlastPressure = 0
			explosion.DestroyJointRadiusPercent = 0
			explosion.ExplosionType = Enum.ExplosionType.NoCraters
			explosion.Visible = true
			print("DEBUG: Explosion effect created at player position during Breakthrough.")
		else
			warn("DEBUG: rootPart is nil, cannot create explosion effect for Breakthrough.")
		end
		tuVi = 0 -- Reset Tu Vi
		setAttribute("TuVi", tuVi)
		-- Logic for ƒê·∫°i ƒê·∫ø and Ki·∫øp progression
		if canhGioiIndex == DAI_DE_INDEX then
			if currentKiep < maxUnlockedKiep then
				currentKiep = currentKiep + 1
				setAttribute("Kiep", currentKiep)
				maxTuVi = 100 * (2 ^ currentKiep) * 100 -- Max Tu Vi based on Ki·∫øp, l≈©y th·ª´a
				setAttribute("MaxTuVi", maxTuVi)
				print("DEBUG: ƒê·∫°i ƒê·∫ø ƒë·ªôt ph√° Ki·∫øp " .. currentKiep .. ". MaxTuVi m·ªõi: " .. maxTuVi)

				-- Buff Kh√≠ Huy·∫øt v√† Ch√¢n Nguy√™n c·ª±c m·∫°nh cho ƒê·∫°i ƒê·∫ø theo Ki·∫øp
				local baseBuff = 10000000 * (currentKiep^2)
				local randomBuff = math.random(10000000, 5000000000)

				currentKhiHuyet = currentKhiHuyet + ((baseBuff * 1.5) + (randomBuff * 1.5))
				setAttribute("KhiHuyet", currentKhiHuyet)
				updatePlayerHealthAndStats(currentKhiHuyet)

				currentChanNguyen = currentChanNguyen + ((baseBuff * 1.5) + (randomBuff * 1.5))
				maxChanNguyen = maxChanNguyen + ((baseBuff * 1.5) + (randomBuff * 1.5))
				setAttribute("ChanNguyen", currentChanNguyen)
				setAttribute("MaxChanNguyen", maxChanNguyen)

				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "ƒê·ªôt Ph√° Th√†nh C√¥ng";
					Text = "Ch√∫c m·ª´ng ƒê·∫°i ƒê·∫ø ƒë√£ ƒë·ªôt ph√° l√™n " .. kiepNames[currentKiep] .. "! Kh√≠ Huy·∫øt v√† Ch√¢n Nguy√™n tƒÉng c·ª±c m·∫°nh!",
					Duration = 4
				})
			else
				print("DEBUG: ƒê·∫°i ƒê·∫ø ƒë√£ ƒë·∫°t gi·ªõi h·∫°n Ki·∫øp cho ki·∫øp n√†y.")
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "ƒê√£ ƒê·∫°t Gi·ªõi H·∫°n Ki·∫øp";
					Text = "B·∫°n ƒë√£ ƒë·∫°t gi·ªõi h·∫°n " .. kiepNames[maxUnlockedKiep] .. " cho ki·∫øp n√†y. H√£y Chuy·ªÉn Th·∫ø ƒë·ªÉ m·ªü kh√≥a th√™m!",
					Duration = 4
				})
				updateActionButtonsVisibility()
				return
			end
		else -- Not Dai De realm, normal breakthrough for tier or next realm
			local currentRealmIsPhamNhan = (canhGioiIndex == PHAM_NHAN_INDEX)
			local atMaxTier = (tang == 9)
			if currentRealmIsPhamNhan then
				-- Ph√†m Nh√¢n -> Luy·ªán Kh√≠ T·∫ßng 1 (kh√¥ng c√≥ buff Kh√≠ Huy·∫øt c·ª• th·ªÉ ·ªü ƒë√¢y, ch·ªâ set kh·ªüi ƒëi·ªÉm)
				canhGioiIndex = LUYEN_KHI_INDEX
				tang = 1
				maxTuVi = 100 * 2 -- Base MaxTuVi for Luy·ªán Kh√≠ T·∫ßng 1
				setAttribute("MaxTuVi", maxTuVi)
				currentKhiHuyet = currentKhiHuyet + 5000000 -- Buff kh·ªüi ƒëi·ªÉm khi t·ª´ Ph√†m Nh√¢n l√™n Luy·ªán Kh√≠
				setAttribute("KhiHuyet", currentKhiHuyet)
				updatePlayerHealthAndStats(currentKhiHuyet)
				currentChanNguyen = currentChanNguyen + 5000000
				maxChanNguyen = maxChanNguyen + 5000000
				setAttribute("ChanNguyen", currentChanNguyen)
				setAttribute("MaxChanNguyen", maxChanNguyen)
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "ƒê·ªôt Ph√° Th√†nh C√¥ng";
					Text = "Ch√∫c m·ª´ng b·∫°n ƒë√£ ƒë·ªôt ph√° l√™n " .. realmList[canhGioiIndex] .. " T·∫ßng " .. tang .. "! Kh√≠ Huy·∫øt v√† Ch√¢n Nguy√™n tƒÉng m·∫°nh!",
					Duration = 4
				})
			elseif not atMaxTier then
				-- Increment tier (T·∫ßng 1-8)
				tang = tang + 1
				maxTuVi = maxTuVi * 1.5 -- MaxTuVi increases for next tier
				setAttribute("MaxTuVi", maxTuVi)
				-- Buff for tier advancement
				local baseBuff = 500 * (canhGioiIndex^2) * tang
				local randomBuff = math.random(500, 500000)
				currentKhiHuyet = currentKhiHuyet + (baseBuff + randomBuff)
				setAttribute("KhiHuyet", currentKhiHuyet)
				updatePlayerHealthAndStats(currentKhiHuyet)
				currentChanNguyen = currentChanNguyen + ((baseBuff * 1.2) + (randomBuff * 1.2))
				maxChanNguyen = maxChanNguyen + ((baseBuff * 1.2) + (randomBuff * 1.2))
				setAttribute("ChanNguyen", currentChanNguyen)
				setAttribute("MaxChanNguyen", maxChanNguyen)
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "ƒê·ªôt Ph√° T·∫ßng Th√†nh C√¥ng";
					Text = "Ch√∫c m·ª´ng b·∫°n ƒë√£ ƒë·ªôt ph√° l√™n " .. realmList[canhGioiIndex] .. " T·∫ßng " .. tang .. "! Kh√≠ Huy·∫øt v√† Ch√¢n Nguy√™n tƒÉng!",
					Duration = 4
				})
			elseif atMaxTier and canhGioiIndex < DAI_DE_INDEX - 1 then
				-- At T·∫ßng 9, but not the last realm before ƒê·∫°i ƒê·∫ø
				-- Advance to next realm
				canhGioiIndex = canhGioiIndex + 1
				tang = 1 -- New realm starts at T·∫ßng 1
				maxTuVi = maxTuVi * 2 -- MaxTuVi doubles for new realm
				setAttribute("MaxTuVi", maxTuVi)
				-- Buff for new realm
				local baseBuff = 1000 * (canhGioiIndex^3)
				local randomBuff = math.random(1000, 50000000)
				currentKhiHuyet = currentKhiHuyet + (baseBuff + randomBuff)
				setAttribute("KhiHuyet", currentKhiHuyet)
				updatePlayerHealthAndStats(currentKhiHuyet)
				currentChanNguyen = currentChanNguyen + ((baseBuff * 1.5) + (randomBuff * 1.5))
				maxChanNguyen = maxChanNguyen + ((baseBuff * 1.5) + (randomBuff * 1.5))
				setAttribute("ChanNguyen", currentChanNguyen)
				setAttribute("MaxChanNguyen", maxChanNguyen)
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "ƒê·ªôt Ph√° C·∫£nh Gi·ªõi Th√†nh C√¥ng";
					Text = "Ch√∫c m·ª´ng b·∫°n ƒë√£ ƒë·ªôt ph√° l√™n " .. realmList[canhGioiIndex] .. " T·∫ßng " .. tang .. "! Kh√≠ Huy·∫øt v√† Ch√¢n Nguy√™n tƒÉng m·∫°nh!",
					Duration = 4
				})
			elseif atMaxTier and canhGioiIndex == DAI_DE_INDEX - 1 then
				-- Last realm before Dai De at T·∫ßng 9 -> Advance to Dai De Nh·∫•t Ki·∫øp
				canhGioiIndex = DAI_DE_INDEX
				tang = 0 -- Dai De has no tiers
				currentKiep = 1 -- Start at Nh·∫•t Ki·∫øp
				maxTuVi = 100 * (2 ^ currentKiep) * 100 -- Max Tu Vi based on Ki·∫øp
				setAttribute("MaxTuVi", maxTuVi)
				-- Buff for Dai De (these lines were already there)
				local baseBuff = 10000000
				local randomBuff = math.random(10000000, 5000000000)
				currentKhiHuyet = currentKhiHuyet + (baseBuff + randomBuff)
				setAttribute("KhiHuyet", currentKhiHuyet)
				updatePlayerHealthAndStats(currentKhiHuyet)
				currentChanNguyen = currentChanNguyen + ((baseBuff * 1.5) + (randomBuff * 1.5))
				maxChanNguyen = maxChanNguyen + ((baseBuff * 1.5) + (randomBuff * 1.5))
				setAttribute("ChanNguyen", currentChanNguyen)
				setAttribute("MaxChanNguyen", maxChanNguyen)
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "ƒê·ªôt Ph√° Th√†nh C√¥ng";
					Text = "Ch√∫c m·ª´ng b·∫°n ƒë√£ ƒë·ªôt ph√° l√™n c·∫£nh gi·ªõi " .. realmList[canhGioiIndex] .. " " .. kiepNames[currentKiep] .. "! Kh√≠ Huy·∫øt v√† Ch√¢n Nguy√™n tƒÉng c·ª±c m·∫°nh!",
					Duration = 4
				})
			end
			-- Logic ƒë·∫∑c bi·ªát cho c·∫£nh gi·ªõi Kim ƒêan (c√≥ th·ªÉ bay/l∆° l·ª≠ng)
			if canhGioiIndex >= KIM_DAN_INDEX then
				-- V√¥ hi·ªáu h√≥a tr·ªçng l·ª±c nh·∫π khi ƒë·∫°t Kim ƒêan
				game.Workspace.Gravity = slowFallGravity
				showNotification("Kim ƒêan Di·ªáu Ph√°p!", "Khi ƒë·∫°t Kim ƒêan, tr·ªçng l·ª±c ƒë∆∞·ª£c gi·∫£m nh·∫π, cho ph√©p b·∫°n di chuy·ªÉn linh ho·∫°t h∆°n!", 4)
				print("DEBUG: Tr·ªçng l·ª±c gi·∫£m nh·∫π khi ƒë·∫°t Kim ƒêan.")
			end

			-- D·ªãch chuy·ªÉn t·ªõi Tu Ti√™n Gi·ªõi khi ƒë·∫°t Kim ƒêan (gi·∫£ ƒë·ªãnh tu ti√™n gi·ªõi l√† n∆°i d√†nh cho Kim ƒêan tr·ªü l√™n)
			if canhGioiIndex == KIM_DAN_INDEX and tang == 1 then
				showNotification("V·∫•n ƒê·∫°o Ti√™n Gi·ªõi!", "B·∫°n ƒë√£ ƒë·∫°t Kim ƒêan T·∫ßng 1! C√°nh c·ªïng Tu Ti√™n Gi·ªõi ƒë√£ m·ªü ra cho b·∫°n.", 5)
				teleportPlayer(TU_TIEN_GIOI_POS)
				print("DEBUG: ƒê√£ d·ªãch chuy·ªÉn ƒë·∫øn Tu Ti√™n Gi·ªõi.")
			end
		end
	else
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Kh√¥ng ƒë·ªß Tu Vi";
			Text = "B·∫°n ch∆∞a t√≠ch l≈©y ƒë·ªß Tu Vi ƒë·ªÉ ƒê·ªôt Ph√°!",
			Duration = 3
		})
		print("DEBUG: ƒê·ªôt Ph√° failed: Not enough Tu Vi.")
	end
	setAttribute("Tang", tang)
	setAttribute("CanhGioiIndex", canhGioiIndex)
	updateUI() -- Make sure UI is updated after any breakthrough
end


local function chuyenTheVePhamNhan()
	print("DEBUG: chuyenTheVePhamNhan called.")
	if tuLuyen then toggleTuLuyenState() end -- D·ª´ng tu luy·ªán n·∫øu ƒëang tu luy·ªán

	-- ƒê·∫£m b·∫£o ch·ªâ chuy·ªÉn th·∫ø khi ƒë·ªß ƒëi·ªÅu ki·ªán
	if canhGioiIndex == DAI_DE_INDEX and currentKiep == maxUnlockedKiep and tuVi >= maxTuVi then
		-- TƒÉng s·ªë l·∫ßn chuy·ªÉn th·∫ø
		chuyenTheCount = chuyenTheCount + 1
		setAttribute("ChuyenTheCount", chuyenTheCount)

		-- Reset v·ªÅ Ph√†m Nh√¢n
		canhGioiIndex = PHAM_NHAN_INDEX
		tang = 0
		tuVi = 0
		maxTuVi = 100 -- Reset maxTuVi
		currentKhiHuyet = 100 -- Reset Kh√≠ Huy·∫øt (ƒë√£ ch·ªânh v·ªÅ 100)
		currentChanNguyen = 500 -- Reset Ch√¢n Nguy√™n
		maxChanNguyen = 500
		currentAge = 20 -- Reset tu·ªïi
		currentKiep = 0 -- Reset Ki·∫øp
		maxUnlockedKiep = math.min(chuyenTheCount + 1, 9) -- M·ªü kh√≥a Ki·∫øp ti·∫øp theo
		currentKi = 100 -- Reset Kh√≠
		maxKi = 100 -- Reset Max Kh√≠

		-- L∆∞u c√°c thu·ªôc t√≠nh m·ªõi
		setAttribute("CanhGioiIndex", canhGioiIndex)
		setAttribute("Tang", tang)
		setAttribute("TuVi", tuVi)
		setAttribute("MaxTuVi", maxTuVi)
		setAttribute("KhiHuyet", currentKhiHuyet)
		setAttribute("ChanNguyen", currentChanNguyen)
		setAttribute("MaxChanNguyen", maxChanNguyen)
		setAttribute("Age", currentAge)
		setAttribute("Kiep", currentKiep)
		setAttribute("MaxUnlockedKiep", maxUnlockedKiep)
		setAttribute("Ki", currentKi)
		setAttribute("MaxKi", maxKi)

		game.Workspace.Gravity = originalGravity -- Kh√¥i ph·ª•c tr·ªçng l·ª±c v·ªÅ m·∫∑c ƒë·ªãnh

		-- C·∫≠p nh·∫≠t HP c·ªßa Humanoid
		updatePlayerHealthAndStats(currentKhiHuyet)

		showNotification("Chuy·ªÉn Th·∫ø Th√†nh C√¥ng!", "B·∫°n ƒë√£ chuy·ªÉn th·∫ø th√†nh c√¥ng v√† tr·ªü v·ªÅ Ph√†m Nh√¢n ƒë·ªÉ b·∫Øt ƒë·∫ßu m·ªôt h√†nh tr√¨nh m·ªõi! Ki·∫øp ti·∫øp theo ƒë√£ ƒë∆∞·ª£c m·ªü kh√≥a!", 6)
		print("DEBUG: Chuy·ªÉn Th·∫ø th√†nh c√¥ng. Tr·ªü v·ªÅ Ph√†m Nh√¢n, Ki·∫øp N·∫°n m·ªü kh√≥a: " .. maxUnlockedKiep)
		teleportPlayer(PHAM_GIOI_POS) -- D·ªãch chuy·ªÉn v·ªÅ Ph√†m Gi·ªõi
	else
		showNotification("Ch∆∞a ƒê·ªß ƒêi·ªÅu Ki·ªán Chuy·ªÉn Th·∫ø", "B·∫°n c·∫ßn ƒë·∫°t ƒê·∫°i ƒê·∫ø, ho√†n th√†nh " .. kiepNames[maxUnlockedKiep] .. " v√† t√≠ch l≈©y ƒë·ªß Tu Vi ƒë·ªÉ chuy·ªÉn th·∫ø.", 5)
		print("DEBUG: Chuy·ªÉn th·∫ø th·∫•t b·∫°i: Ch∆∞a ƒë·ªß ƒëi·ªÅu ki·ªán.")
	end
	updateUI()
end
-- === K·∫æT N·ªêI S·ª∞ KI·ªÜN ===
player.CharacterAdded:Connect(function(char)
	character = char
	humanoid = character:WaitForChild("Humanoid")
	rootPart = character:WaitForChild("HumanoidRootPart")
	animator = humanoid:WaitForChild("Animator")

	-- Kh√¥i ph·ª•c t·ªëc ƒë·ªô v√† l·ª±c nh·∫£y v·ªÅ m·∫∑c ƒë·ªãnh khi nh√¢n v·∫≠t t·∫£i l·∫°i (reset)
	humanoid.WalkSpeed = defaultWalkSpeed
	humanoid.JumpPower = defaultJumpPower
	humanoid.UseGravity = true -- ƒê·∫£m b·∫£o tr·ªçng l·ª±c b√¨nh th∆∞·ªùng

	-- ƒê·∫£m b·∫£o t·∫Øt m·ªçi tr·∫°ng th√°i buff n·∫øu reset nh√¢n v·∫≠t
	tuLuyen = false
	isThanTheActive = false
	isTuSiActive = false -- NEW: Reset tr·∫°ng th√°i Tu Sƒ©
	toggleMovementLock(false) -- ƒê·∫£m b·∫£o di chuy·ªÉn ƒë∆∞·ª£c m·ªü
	stopTuLuyenAnimation()
	stopThanTheAnimation()
	stopTuSiAnimation() -- NEW: D·ª´ng animation Tu Sƒ©

	-- C·∫≠p nh·∫≠t HP/MP sau khi t·∫£i l·∫°i nh√¢n v·∫≠t
	updatePlayerHealthAndStats(getAttribute("KhiHuyet", 100)) -- T·∫£i l·∫°i KhiHuyet v√† c·∫≠p nh·∫≠t m√°u (ƒë√£ ch·ªânh v·ªÅ 100)

	updateUI()
end)

-- K·∫øt n·ªëi n√∫t Tu Luy·ªán
if tuLuyenButton then
	tuLuyenButton.MouseButton1Click:Connect(toggleTuLuyenState)
else
	warn("TuLuyenButton not found!")
end

-- K·∫øt n·ªëi n√∫t ƒê·ªôt Ph√°
if dotPhaButton then
	dotPhaButton.MouseButton1Click:Connect(dotPha)
else
	warn("DotPhaButton not found!")
end

-- K·∫øt n·ªëi n√∫t Chuy·ªÉn Th·∫ø
if chuyenTheButton then
	chuyenTheButton.MouseButton1Click:Connect(chuyenTheVePhamNhan)
else
	warn("ChuyenTheButton not found!")
end

-- K·∫øt n·ªëi n√∫t Th√¢n Th·ªÉ
if thanTheButton then
	thanTheButton.MouseButton1Click:Connect(toggleThanTheState)
else
	warn("ThanTheButton not found!")
end

-- NEW: K·∫øt n·ªëi n√∫t Tu Sƒ©
if tuSiButton then
	tuSiButton.MouseButton1Click:Connect(toggleTuSiState)
else
	warn("TuSiButton not found!")
end

-- === K·∫æT N·ªêI S·ª∞ KI·ªÜN KH√ÅC (v√≠ d·ª•: c√°c n√∫t d·ªãch chuy·ªÉn th·∫ø gi·ªõi ƒë√£ b·ªã x√≥a) ===

-- X·ª≠ l√Ω input t·ª´ b√†n ph√≠m
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
	if gameProcessedEvent then return end

	-- Ph√≠m C cho Tu Luy·ªán
	if input.KeyCode == Enum.KeyCode.C then
		toggleTuLuyenState()
	end

	-- Ph√≠m B cho ƒê·ªôt Ph√°
	if input.KeyCode == Enum.KeyCode.B then
		dotPha()
	end

	-- Ph√≠m V cho Chuy·ªÉn Th·∫ø
	if input.KeyCode == Enum.KeyCode.V then
		if chuyenTheFrame.Visible and chuyenTheButton.Active then
			chuyenTheVePhamNhan()
		end
	end

	-- Ph√≠m F cho Th√¢n Th·ªÉ
	if input.KeyCode == Enum.KeyCode.F then
		toggleThanTheState()
	end

	-- NEW: Ph√≠m H cho Tu Sƒ©
	if input.KeyCode == Enum.KeyCode.H then
		toggleTuSiState()
	end
end)

-- === LOGIC GAME LOOP (RunService) ===
RunService.Heartbeat:Connect(function(deltaTime)
	-- C·∫≠p nh·∫≠t HP/MP n·∫øu c√≥
	if humanoid then
		-- Humanoid.MaxHealth ƒë∆∞·ª£c c·∫≠p nh·∫≠t b·ªüi currentKhiHuyet
		humanoid.Health = math.min(humanoid.Health, humanoid.MaxHealth) -- ƒê·∫£m b·∫£o m√°u kh√¥ng v∆∞·ª£t qu√° MaxHealth
	end

	-- Logic tu luy·ªán
	if tuLuyen then
		tuVi = tuVi + (heSoLinhCan * deltaTime)
		if tuVi >= maxTuVi then
			tuVi = maxTuVi -- Gi·ªõi h·∫°n tu vi ·ªü max
			-- T·ª± ƒë·ªông ƒë·ªôt ph√° n·∫øu tu vi ƒë·∫ßy v√† l√† Ph√†m Nh√¢n (ƒë·ªÉ b·∫Øt ƒë·∫ßu tu luy·ªán)
			if canhGioiIndex == PHAM_NHAN_INDEX then
				dotPha()
			end
		end
		setAttribute("TuVi", tuVi)
		updateUI()
	end

	-- Kh√≠ t·ª± ƒë·ªông h·ªìi ph·ª•c (ch·ªâ khi kh√¥ng tu luy·ªán)
	if not tuLuyen and currentKi < maxKi then
		currentKi = math.min(maxKi, currentKi + 1 * deltaTime) -- H·ªìi 1 Kh√≠ m·ªói gi√¢y
		setAttribute("Ki", currentKi)
		updateUI()
	end

	-- Logic h·ªìi ph·ª•c Ch√¢n Nguy√™n (n·∫øu kh√¥ng ·ªü ch·∫ø ƒë·ªô Th√¢n Th·ªÉ ho·∫∑c kh√¥ng di chuy·ªÉn)
	if not isThanTheActive or humanoid.MoveDirection.Magnitude == 0 then
		if currentChanNguyen < maxChanNguyen then
			currentChanNguyen = math.min(maxChanNguyen, currentChanNguyen + 0.5 * deltaTime) -- H·ªìi 0.5 Ch√¢n Nguy√™n m·ªói gi√¢y
			setAttribute("ChanNguyen", currentChanNguyen)
			updateUI()
		else
			-- N·∫øu ch√¢n nguy√™n ƒë·∫ßy th√¨ kh√¥ng c·∫ßn c·∫≠p nh·∫≠t UI li√™n t·ª•c
			-- nh∆∞ng v·∫´n ƒë·∫£m b·∫£o gi√° tr·ªã ƒë√∫ng
			currentChanNguyen = maxChanNguyen
			setAttribute("ChanNguyen", currentChanNguyen)
		end
	end

	-- Ch√¢n Nguy√™n ti√™u hao khi ·ªü ch·∫ø ƒë·ªô Th√¢n Th·ªÉ v√† di chuy·ªÉn
	-- S·ª≠ d·ª•ng isThanTheActive ƒë·ªÉ ki·ªÉm tra tr·∫°ng th√°i
	if isThanTheActive and humanoid and humanoid.MoveDirection.Magnitude > 0 then
		local chanNguyenConsumed = CHAN_NGUYEN_PER_SECOND_MOVE_COST * deltaTime
		if currentChanNguyen > chanNguyenConsumed then
			currentChanNguyen = currentChanNguyen - chanNguyenConsumed
			setAttribute("ChanNguyen", currentChanNguyen)
			updateUI() -- C·∫≠p nh·∫≠t UI ƒë·ªÉ ph·∫£n √°nh s·ª± thay ƒë·ªïi c·ªßa Ch√¢n Nguy√™n
		else
			currentChanNguyen = 0 -- ƒê·∫∑t Ch√¢n Nguy√™n v·ªÅ 0
			setAttribute("ChanNguyen", currentChanNguyen)
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Ch√¢n Nguy√™n c·∫°n ki·ªát";
				Text = "Ch√¢n Nguy√™n ƒë√£ c·∫°n ki·ªát! C√°c hi·ªáu ·ª©ng c·ªßa Ch·∫ø ƒë·ªô Th√¢n Th·ªÉ s·∫Ω y·∫øu ƒëi.";
				-- THAY ƒê·ªîI TH√îNG B√ÅO!
				Duration = 3
			})
			print("DEBUG: Ch√¢n Nguy√™n depleted by movement. Buffs might be reduced.")
		end
	end

	-- TƒÉng tu·ªïi (m·ªói 60 gi√¢y game = 1 nƒÉm)
	currentAge = currentAge + deltaTime / 60
	setAttribute("Age", currentAge)

	-- Ki·ªÉm tra ki·∫øp (m·ªói khi tu·ªïi ƒë·∫°t m·ªëc 100)
	if math.floor(currentAge) >= 100 and (math.floor(currentAge) % 100 == 0) and not getAttribute("KiepCheckedForAge", false) then -- C·ª© m·ªói 100 nƒÉm ki·ªÉm tra 1 l·∫ßn
		setAttribute("KiepCheckedForAge", true) -- ƒê√°nh d·∫•u ƒë√£ ki·ªÉm tra cho m·ªëc tu·ªïi n√†y

		if canhGioiIndex == DAI_DE_INDEX and currentKiep < maxUnlockedKiep then
			-- N·∫øu l√† ƒê·∫°i ƒê·∫ø v√† c√≤n Ki·∫øp ƒë·ªÉ ƒë·ªôt ph√°
			-- Kh√¥ng t·ª± ƒë·ªông ƒë·ªôt ph√° Ki·∫øp, m√† ng∆∞·ªùi ch∆°i ph·∫£i click n√∫t ƒê·ªôt Ph√°
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Ki·∫øp N·∫°n S·∫Øp ƒê·∫øn!";
				Text = "B·∫°n ƒë√£ s·ªëng m·ªôt th·∫ø k·ª∑! H√£y chu·∫©n b·ªã ƒë·ªôt ph√° Ki·∫øp N·∫°n ƒë·ªÉ n√¢ng cao c·∫£nh gi·ªõi!";
				Duration = 5
			})
			print("DEBUG: Kiep N·∫°n s·∫Øp ƒë·∫øn cho ƒê·∫°i ƒê·∫ø.")
		elseif canhGioiIndex < DAI_DE_INDEX and tuVi >= maxTuVi then
			-- N·∫øu ch∆∞a l√† ƒê·∫°i ƒê·∫ø v√† ƒë·ªß Tu Vi ƒë·ªÉ ƒë·ªôt ph√° c·∫£nh gi·ªõi/t·∫ßng
			-- Kh√¥ng t·ª± ƒë·ªông ƒë·ªôt ph√°, ng∆∞·ªùi ch∆°i ph·∫£i click n√∫t
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "C∆° Duy√™n ƒê·ªôt Ph√°";
				Text = "Tu Vi ƒë√£ vi√™n m√£n! B·∫°n c√≥ th·ªÉ ƒë·ªôt ph√° c·∫£nh gi·ªõi ti·∫øp theo!";
				Duration = 5
			})
			print("DEBUG: C∆° duy√™n ƒë·ªôt ph√° cho ng∆∞·ªùi ch∆°i ch∆∞a ƒê·∫°i ƒê·∫ø.")
		else
			-- Tr∆∞·ªùng h·ª£p kh√¥ng ƒë·ªß ƒëi·ªÅu ki·ªán ƒë·ªôt ph√° khi ƒë·∫°t 100 tu·ªïi ho·∫∑c h·∫øt ki·∫øp
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Ki·∫øp N·∫°n Th·∫•t B·∫°i";
				Text = "B·∫°n ƒë√£ s·ªëng m·ªôt th·∫ø k·ª∑ nh∆∞ng kh√¥ng th·ªÉ ƒë·ªôt ph√°. B·∫°n ƒë√£ th·∫•t b·∫°i trong ki·∫øp n·∫°n n√†y v√† tr·ªçng sinh!";
				Duration = 5
			})
			-- Tr·ªçng sinh v·ªÅ Ph√†m Nh√¢n
			chuyenTheVePhamNhan()
			print("DEBUG: Ki·∫øp N·∫°n th·∫•t b·∫°i, chuy·ªÉn th·∫ø v·ªÅ Ph√†m Nh√¢n.")
		end
	elseif math.floor(currentAge) % 100 ~= 0 then
		setAttribute("KiepCheckedForAge", false) -- ƒê·∫∑t l·∫°i c·ªù ƒë·ªÉ c√≥ th·ªÉ ki·ªÉm tra ·ªü m·ªëc tu·ªïi ti·∫øp theo
	end

	updateUI()
end)

-- === KH·ªûI T·∫†O BAN ƒê·∫¶U ===
-- (H√†m initializeUI kh√¥ng ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a trong script, c√≥ th·ªÉ ƒë√£ b·ªã x√≥a ho·∫∑c ch∆∞a ho√†n thi·ªán.
-- C√°c gi√° tr·ªã ƒë∆∞·ª£c t·∫£i tr·ª±c ti·∫øp b√™n d∆∞·ªõi)

-- T·∫£i c√°c thu·ªôc t√≠nh khi game b·∫Øt ƒë·∫ßu
tuVi = getAttribute("TuVi", 0)
canhGioiIndex = getAttribute("CanhGioiIndex", PHAM_NHAN_INDEX)
tang = getAttribute("Tang", 0)
currentChanNguyen = getAttribute("ChanNguyen", maxChanNguyen)
currentKi = getAttribute("Ki", 100) -- T·∫£i Kh√≠ ban ƒë·∫ßu
maxKi = getAttribute("MaxKi", 100) -- T·∫£i Max Kh√≠ ban ƒë·∫ßu
currentAge = getAttribute("Age", 20) -- T·∫£i tu·ªïi ban ƒë·∫ßu
maxUnlockedKiep = getAttribute("MaxUnlockedKiep", 1) -- ƒê·∫£m b·∫£o t·∫£i MaxUnlockedKiep

-- C·∫≠p nh·∫≠t MaxTuVi ban ƒë·∫ßu d·ª±a tr√™n c·∫£nh gi·ªõi v√† t·∫ßng ƒë√£ t·∫£i
maxTuVi = canhGioiIndex * 1000 + tang * 100
setAttribute("MaxTuVi", maxTuVi)

-- C·∫≠p nh·∫≠t HP c·ªßa Humanoid d·ª±a tr√™n Kh√≠ Huy·∫øt ƒë√£ t·∫£i
updatePlayerHealthAndStats(getAttribute("KhiHuyet", 100)) -- T·∫£i l·∫°i KhiHuyet v√† c·∫≠p nh·∫≠t m√°u (ƒë√£ ch·ªânh v·ªÅ 100)

updateUI()
print("DEBUG: Script initialized and UI updated.")
